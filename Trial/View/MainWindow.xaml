<UserControl x:Class="Trial.View.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Trial.View"
             mc:Ignorable="d" 
             d:DesignHeight="890" d:DesignWidth="400" Background="#F5F5F5">


    <UserControl.Resources>

        <SolidColorBrush x:Key="Text" Color="#07908E"/>
        <SolidColorBrush x:Key="BtnHiddenText" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="BtnNormal" Color="#07908E"/>
        <SolidColorBrush x:Key="BtnHidden" Color="#77DABE"/>
        <SolidColorBrush x:Key="BtnClick" Color="#068683"/>
        <SolidColorBrush x:Key="BtnOver" Color="#77DABE"/>
        <SolidColorBrush x:Key="BtnText" Color="#edf6f9"/>

        <FontFamily x:Key="PoppinsLight">pack://application:,,,/Fonts/#Poppins Light</FontFamily>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource Text}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontFamily" Value="{StaticResource PoppinsLight}"/>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource Text}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BtnNormal}"/>
            <Setter Property="FontFamily" Value="{StaticResource PoppinsLight}"/>
        </Style>

        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="{StaticResource Text}"/>
            <Setter Property="FontFamily" Value="{StaticResource PoppinsLight}"/>
        </Style>

        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource Text}"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{StaticResource PoppinsLight}"/>
            <Setter Property="Height" Value="25"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource BtnNormal}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BtnNormal}"/>
            <Setter Property="Foreground" Value="{StaticResource BtnText}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background"  Value="{StaticResource BtnOver}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background"  Value="{StaticResource BtnClick}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource BtnHidden}"/>
                    <Setter Property="Foreground" Value="{StaticResource BtnHiddenText}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="boolToVis"/>
    </UserControl.Resources>


    <ScrollViewer>
        <Border Margin="10">
            <StackPanel Orientation="Vertical">
                <Image Width="70" Height="70" Source="/LearnCarbon;component/Resources/logo.png" />

                <!--Selection-->
                <GroupBox Header="Selection">
                    <StackPanel>

                        <Button Content="Select Model" Margin="10" Height="25" Command="{Binding SelectCommand}" />

                        <Label  VerticalAlignment="Center" Content="Typical Floor Height:" />
                        <TextBox  Margin="5" Text="{Binding TypicalHeight,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label VerticalAlignment="Center" Content="Location:" />
                        <ComboBox Margin="5" ItemsSource="{Binding Locations}" SelectedItem="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <GroupBox Header="Building type" Margin="5,10" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <WrapPanel >
                                <RadioButton Margin="5" GroupName="BuildingType1" Content="Commercial" IsChecked="{Binding IsCommercial, Mode=OneWayToSource, FallbackValue=true}"/>
                                <RadioButton Margin="5" GroupName="BuildingType1" Content="Residential" IsChecked="{Binding IsResidential, Mode=OneWayToSource}" />
                            </WrapPanel>
                        </GroupBox>

                        <Label  VerticalAlignment="Center" Content="No of Floor:" />
                        <TextBox  Margin="5" IsEnabled="False" Text="{Binding NoOfFloor,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label  VerticalAlignment="Center" Content="Footprint:" />
                        <TextBox  Margin="5" IsEnabled="False" Text="{Binding Footprint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label VerticalAlignment="Center" Content="Total Area:" />
                        <TextBox Margin="5" IsEnabled="False" Text="{Binding TotalArea}"/>

                    </StackPanel>
                </GroupBox>

                <!---Analysis-->
                <GroupBox Header="Analysis" Margin="0,10,0,10">
                    <StackPanel>
                        <WrapPanel Margin="0,10,0,0">
                            <RadioButton Margin="5" Content="Option A" GroupName="Option" IsChecked="{Binding OptionA, Mode=OneWayToSource,FallbackValue=true}"/>
                            <RadioButton Margin="5" Content="Option B" GroupName="Option"  IsChecked="{Binding OptionB, Mode=OneWayToSource,FallbackValue=false}"/>
                        </WrapPanel>

                        <Grid Visibility="{Binding OptionA,Converter={StaticResource boolToVis}}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <GroupBox  Header="Type of Structure" Margin="5,10" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                                <WrapPanel >
                                    <RadioButton Margin="5" GroupName="StructureType" Content="Timber" IsChecked="{Binding IsTimber, Mode=OneWayToSource, FallbackValue=true}"/>
                                    <RadioButton Margin="5" GroupName="StructureType" Content="Concrete-Timber Hybrid" IsChecked="{Binding IsConcreteTimber, Mode=OneWayToSource}"/>
                                    <RadioButton Margin="5" GroupName="StructureType" Content="Concrete" IsChecked="{Binding IsConcrete, Mode=OneWayToSource}"/>
                                    <RadioButton Margin="5" GroupName="StructureType" Content="Steel-Concrete Hybrid" IsChecked="{Binding IsSteelConcrete, Mode=OneWayToSource}"/>
                                    <!--<RadioButton Margin="5" GroupName="StructureType" Content="Steel" IsChecked="{Binding IsSteel, Mode=OneWayToSource}"/>-->
                                </WrapPanel>
                            </GroupBox>
                        </Grid>

                        <Grid Visibility="{Binding OptionB,Converter={StaticResource boolToVis}}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Content="Co2 Target:" />
                            <TextBox Grid.Row="0" Grid.Column="1"  Margin="5" Text="{Binding TargetCo2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        </Grid>

                        <Button Content="Calculate" Margin="10" Height="25" Command="{Binding CalculateCommand}" />
                    </StackPanel>
                </GroupBox>

                <!--Output-->
                <GroupBox Header="Output">
                    <StackPanel>
                        <TextBox Height="40" Margin="5,5,5,10" TextWrapping="Wrap" Text="{Binding Output, Mode=OneWay}"/>
                        <Image Visibility="{Binding IsConWoodHyb, Converter={StaticResource boolToVis}}" 
                               Height="100" Width="200" Source="/LearnCarbon;component/Resources/cth.png"  />
                        <Image Visibility="{Binding IsWood, Converter={StaticResource boolToVis}}"
                               Height="100" Width="200" Source="/LearnCarbon;component/Resources/wo.png"  />
                        <Image Visibility="{Binding IsSteConHyb, Converter={StaticResource boolToVis}}"
                               Height="100" Width="200" Source="/LearnCarbon;component/Resources/sch.png"  />
                        <Image Visibility="{Binding IsRc, Converter={StaticResource boolToVis}}"
                               Height="100" Width="200" Source="/LearnCarbon;component/Resources/rc.png"  />
                    </StackPanel>
                </GroupBox>

                <!--<Grid>
                    <Canvas  Background="HotPink" Height="100" >
                        <Canvas HorizontalAlignment="Center">
                            <Rectangle HorizontalAlignment="Center" Width="300" Height="20"  Canvas.Top="10">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="LimeGreen" Offset="0.0" />
                                        <GradientStop Color="Red" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Line X1="0" Y1="0" X2="0" Y2="40" Panel.ZIndex="1" Stroke="Gray" StrokeThickness="2"/>
                        </Canvas>

                    </Canvas>
                </Grid>-->

            </StackPanel>
        </Border>
    </ScrollViewer>
</UserControl>
